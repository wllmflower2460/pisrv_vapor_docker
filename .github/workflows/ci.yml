name: CI

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  REQUIRED_SUBMODULE: DataDogsServer/h8-examples
  EXPECT_EXACTLY_ONE: "false"

jobs:
  build-and-test:
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        swift: [ "6.0.2", "5.10.1" ]
    continue-on-error: ${{ startsWith(matrix.swift, '5.') }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    steps:
      - name: Checkout (recursive with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Show submodule status
        run: |
          git submodule status --recursive || true
          echo
          echo "Gitlinks (mode 160000):"
          git ls-files --stage | awk '$1=="160000"{print $4}'

      - name: Assert required submodule present (optionally only one)
        run: |
          set -euo pipefail
          gitlinks="$(git ls-files --stage | awk '$1=="160000"{print $4}')"
          echo "Found gitlinks:"; echo "$gitlinks"
          echo "$gitlinks" | grep -qx "$REQUIRED_SUBMODULE"
          if [ "${EXPECT_EXACTLY_ONE}" = "true" ]; then
            cnt="$(echo "$gitlinks" | wc -l | tr -d ' ')"
            echo "Gitlink count: $cnt"; test "$cnt" -eq 1
          fi

      - name: Set up Swift
        uses: swift-actions/setup-swift@v1
        with:
          swift-version: ${{ matrix.swift }}

      - name: Swift toolchain version
        run: swift --version

      - name: Install system deps (Vapor common)
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libsqlite3-dev libssl-dev zlib1g-dev libcurl4-openssl-dev

      - name: Cache SPM build artifacts
        uses: actions/cache@v4
        with:
          path: |
            .build
            ~/.swiftpm
          key: ${{ runner.os }}-spm-${{ matrix.swift }}-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-${{ matrix.swift }}-
            ${{ runner.os }}-spm-

      - name: Resolve packages
        run: swift package resolve

      - name: Build (release)
        run: swift build -c release --disable-sandbox

      - name: Test
        run: swift test --parallel --disable-sandbox

  canary-resolve:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    continue-on-error: true
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: false
          fetch-depth: 0
      - uses: swift-actions/setup-swift@v1
        with:
          swift-version: "6.0.2"
      - name: Resolve only (fast canary)
        run: swift package resolve